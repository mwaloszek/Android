//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.2.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package pl.edu.ug.aib.firstApp;

import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import android.util.Log;
import org.androidannotations.api.BackgroundExecutor;
import pl.edu.ug.aib.firstApp.data.PhoneBook;

public final class RestBackgroundTask_
    extends RestBackgroundTask
{

    private Context context_;
    private Handler handler_ = new Handler(Looper.getMainLooper());

    private RestBackgroundTask_(Context context) {
        context_ = context;
        init_();
    }

    public static RestBackgroundTask_ getInstance_(Context context) {
        return new RestBackgroundTask_(context);
    }

    private void init_() {
        restClient = new PhoneBookRestClient_(context_);
        if (context_ instanceof FirstActivity) {
            activity = ((FirstActivity) context_);
        } else {
            Log.w("RestBackgroundTask_", (("Due to Context class "+ context_.getClass().getSimpleName())+", the @RootContext FirstActivity won't be populated"));
        }
    }

    public void rebind(Context context) {
        context_ = context;
        init_();
    }

    @Override
    public void publishResult(final PhoneBook phoneBook) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                RestBackgroundTask_.super.publishResult(phoneBook);
            }

        }
        );
    }

    @Override
    public void publishError(final Exception e) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                RestBackgroundTask_.super.publishError(e);
            }

        }
        );
    }

    @Override
    public void getPhoneBook() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    RestBackgroundTask_.super.getPhoneBook();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

}
